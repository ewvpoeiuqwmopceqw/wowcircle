Ext.define('wowPortal.module.CharacterMoveToWorld', {
    extend: 'wowPortal.module.Common',

    initComponent: function() {
        this.__serverListCombo = Ext.create('Ext.form.field.ComboBox', {
            fieldLabel: wowPortal.locale.MODULE_CHARACTER_MOVE_TO_WORLD_WORLDS_COMBO_LABEL,
            displayField: 'fdescription',
            width: 480,
            labelWidth: 200,
            queryMode: 'local',
            typeAhead: false,
            forceSelection: false,
            editable: false,
            valueField: 'fkey',
            allowBlank: false,
            listConfig: {
                getInnerTpl: function() {
                    return '<div data-qtip="{fname}">{fdescription}</div>';
                }
            },
            store: {
                type: 'direct',
                model: 'wowPortal.model.TransferServers',
                autoLoad: true,
                directFn: wowPortal.wow_Services.cmdCharacterSnapshotServerList,
                listeners: {
                    scope: this,
                    load: function(store, record, successfull) {
                        if (0 == store.getCount()) {
                            this.__serverListCombo.emptyText = wowPortal.locale.MODULE_CHARACTER_MOVE_TO_WORLD_WORLDS_COMBO_EMPTY_TEXT;
                            this.__serverListCombo.disable();
                        } else {
                            this.__serverListCombo.emptyText = '';
                            this.__serverListCombo.enable();
                            this.__serverListCombo.setValue(store.first());
                            this.__charactersGrid.getStore().getProxy().extraParams['toServer'] = store.first().data.fkey;
                            this.__charactersGrid.getStore().load();
                        }
                    }
                }
            },
            listeners: {
                scope: this,
                select: function(combo, selection) {
                    this.__isValid();
                },
                selectionchange: function(view, records) {
                    if (!Ext.isEmpty(records)) {
                        this.__charactersGrid.getStore().getProxy().extraParams['toServer'] = records[0].getId();
                        this.__charactersGrid.getStore().load();
                        this.__pagingToolbar.moveFirst();
                        this.__itemsHeaderFilters.clearFilters();
                        
                    }
                }
            }
        });

        var checkboxSelModel = new Ext.selection.CheckboxModel({
            checkOnly: true,
            allowDeselect: true
        });
        this.__charactersGrid = Ext.create('Ext.grid.Panel', {
            itemId: 'characters-grid',
            title: wowPortal.locale.MODULE_CHARACTER_MOVE_TO_WORLD_GRID_TITLE,
            loadMask: true,
            region: 'center',
            store: {
                type: 'direct',
                model: 'wowPortal.model.MovingCharacters',
                remoteSort: false,
                autoLoad: false,
                sorters: [{
                    property: 'name',
                    direction: 'ASC'
                }],
                proxy: {
                    directFn: wowPortal.wow_Services.cmdGetCharactersListToSnapshot,
                    type: 'direct',
                    extraParams: {
                        'toServer': -1
                    },
                    reader: {
                        reader: 'json',
                        root: 'data',
                        idProperty: 'entry',
                        totalProperty: 'total'
                    }
                }
            },
            columns: [{
                dataIndex: 'name',
                text: wowPortal.locale.COMMON_CHARACTERS_GRID_HEADER_NAME,
                flex: 1
                }, {
                    dataIndex: 'faction',
                    text: wowPortal.locale.COMMON_CHARACTERS_GRID_HEADER_FACTION,
                    width: 60,
                    align: 'center',
                    renderer: function(value, metaData, record, colIndex, store, view) {
                        return '<img style="width:18px; height:18px;" src="/images/faction/' + value + '.gif"/>';
                    }
                }, {
                    dataIndex: 'race',
                    text: wowPortal.locale.COMMON_CHARACTERS_GRID_HEADER_RACE,
                    width: 40,
                    align: 'center',
                    renderer: function(value, metaData, record, colIndex, store, view) {
                        return '<img style="width:18px; height:18px;" src="/images/race/small/' + record.get('race') + '-' + record.get('gender') + '.gif"/>';
                    }
                }, {
                    dataIndex: 'class',
                    text: wowPortal.locale.COMMON_CHARACTERS_GRID_HEADER_CLASS,
                    width: 40,
                    align: 'center',
                    renderer: function(value, metaData, record, colIndex, store, view) {
                        return '<img style="width:18px; height:18px;" src="/images/class/small/' + value + '.gif"/>';
                    }
                }, {
                    dataIndex: 'level',
                    text: wowPortal.locale.COMMON_CHARACTERS_GRID_HEADER_LEVEL,
                    align: 'center',
                    width: 55
                }, {
                    dataIndex: 'totaltime',
                    text: wowPortal.locale.COMMON_CHARACTERS_GRID_HEADER_TOTAL_TIME,
                    width: 90
                }, {
                    text: wowPortal.locale.COMMON_CHARACTERS_GRID_HEADER_PRICE,
                    width: 60,
                    dataIndex: 'fprice'
            }],
            selModel: checkboxSelModel,
            viewConfig: {
                stripeRows: true
            },
            listeners: {
                scope: this,
                selectionchange: function(view, records) {
                    this.__isValid();
                }
            }
        });

        Ext.apply(this, {
            items: [{
                xtype: 'form',
                items: [{
                    xtype: 'container', 
                    layout: 'hbox',
                    items: [this.__serverListCombo, {
                        xtype: 'button',
                        name: 'send',
                        disabled: true,
                        text: wowPortal.locale.MODULE_CHARACTER_MOVE_TO_WORLD_SUBMIT_BTN,
                        disabled: true,
                        scope: this,
                        handler: this.__onSendClick
                    }]
                    }, this.__charactersGrid]
            }]
        });
        this.callParent();

        this.__sendBtn = this.down('[name=send]');
    },

    __onSendClick: function() {
        if (this.__isValid()) {
            var serverId = this.__serverListCombo.getValue();
            var selectedChars = this.__charactersGrid.getSelectionModel().getSelection();
            var guids = [];
            Ext.each(selectedChars, function(item) {
                guids.push(item.get('guid'));
            });

            this.setLoading(true);
            wowPortal.wow_Services.cmdCharacterSnapshot({
                serverId: serverId,
                guids: guids
                }, function(response, provider) {
                    this.setLoading(false);
                    if('exception' !== provider.type && true === response.success) {
                        Ext.Msg.alert(wowPortal.locale.COMMON_CAPTION_MESSAGE, response.msg);
                    }
                    this.__charactersGrid.getStore().load();
                }, this);
        }
    },

    __isValid: function(valid) {
        if (!Ext.isDefined(valid)) {
            var serverId = this.__serverListCombo.getValue();
            //            var isCurrentServer = this.__serverListCombo.getStore().getById(serverId).get('selected');
            var selectedChars = this.__charactersGrid.getSelectionModel().getSelection();
            valid = !Ext.isEmpty(serverId) && !Ext.isEmpty(selectedChars);
        }
        this.__sendBtn.setDisabled(!valid);
        return valid;
    }
});