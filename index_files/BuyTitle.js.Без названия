/*
 * Dialog: Buy title for character
 */

Ext.require([
    'wowPortal.model.Titles'
]);

Ext.define('wowPortal.module.dialog.BuyTitle', {
    extend: 'wowPortal.module.dialog.CommonBuyWindow',

    models: ['wowPortal.model.Titles'],

    width: 900,
    height: 400,

    __titlesGrid: null,

    initComponent: function() {
        this.callParent(arguments);

        this.__titlesGrid = this.add({
            __currentCharacterName: '',
            __currentCharacterGender: '',
            xtype: 'gridpanel',
            width: 400,
            split: true,
            itemId: 'titles-grid',
            title: wowPortal.locale.BUY_TITLE_WINDOW_TITLES_GRID_TITLE,
            loadMask: true,
            region: 'east',
            store: {
                type: 'direct',
                model: 'wowPortal.model.Titles',
                remoteSort: false,
                autoLoad: true,
                directFn: wowPortal.wow_Services.cmdGetTitlesList
            },
            columns: [{
                dataIndex: 'fnameW',
                text: wowPortal.locale.BUY_TITLE_WINDOW_HEADER_TITLE,
                flex: 1,
                renderer: function(value, metaData, record, colIndex, store, view) {
                    // TODO add switch for male / female
                    var pattern = 0 == this.__currentCharacterGender ? record.get('fnameM') : record.get('fnameW');
                    //var pattern = record.get('fnameW');
                    return pattern.replace('%s', this.__currentCharacterName);
                }
            }, {
                dataIndex: 'price',
                width: 100,
                text: wowPortal.locale.BUY_TITLE_WINDOW_HEADER_PRICE
            }],
            viewConfig: {
                stripeRows: true
            },
            listeners: {
                scope: this,
                selectionchange: function(view, records) {
                    this.__currentCharacterName = records[0].get('fnameW');
                    this.__isValid();
                }
            }
        });

        this.__charactesGrid.on('selectionchange', function(view, records) {
            this.__titlesGrid.__currentCharacterName = records[0].get('name');
            this.__titlesGrid.__currentCharacterGender = records[0].get('gender');
            this.__titlesGrid.getView().refresh();
        }, this);
    },

    __onOKClick: function() {
        if (this.__isValid()) {
            // get selected character
            var selectedChars = this.__charactesGrid.getSelectionModel().getSelection();
            var selectedTitles = this.__titlesGrid.getSelectionModel().getSelection();
            this.close();
            this.callback.call(this.callbackScope || window, selectedChars[0].get('guid'), selectedTitles[0].get('fkey'));
        }
    },

    __isValid: function(valid) {
        if (!Ext.isDefined(valid)) {
            var selectedChars = this.__charactesGrid.getSelectionModel().getSelection();
            var selectedTitles = this.__titlesGrid.getSelectionModel().getSelection();
            valid = !Ext.isEmpty(selectedChars) && !Ext.isEmpty(selectedTitles);
        }

        this.__okButton.setDisabled(!valid);
        return valid;
    }
});